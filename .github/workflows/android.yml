name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Choose build type'
        required: true
        default: 'Release'
        type: choice
        options:
          - Debug
          - Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Decode Keystore (for Release only)
      if: ${{ github.event.inputs.build_type == 'Release' }}
      run: |
        mkdir -p app
        echo "${{ secrets.SIGNING_KEY }}" | base64 --decode > app/release.jks

    - name: Build with Gradle
      run: |
        if [ "${{ github.event.inputs.build_type }}" == "Release" ]; then
          ./gradlew clean assembleRelease \
            -Pandroid.injected.signing.store.file=app/release.jks \
            -Pandroid.injected.signing.store.password=${{ secrets.STORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}
        else
          ./gradlew clean assembleDebug
        fi

    - name: Find and upload APK
      run: |
        APK_PATH=$(find . -name "*.apk" -type f | head -1)
        if [ -n "$APK_PATH" ]; then
          echo "Found APK at: $APK_PATH"
          echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV
        else
          echo "No APK files found"
          exit 1
        fi

    - name: Upload APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.inputs.build_type }}-apk
        path: ${{ env.APK_PATH }}

    - name: Upload APK to GitHub Release (Release only)
      if: github.event_name == 'release' && github.event.inputs.build_type == 'Release'
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.APK_PATH }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
